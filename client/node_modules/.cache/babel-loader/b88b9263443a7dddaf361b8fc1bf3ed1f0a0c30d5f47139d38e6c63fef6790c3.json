{"ast":null,"code":"var _jsxFileName = \"/media/deepak/New Volume/reactproject/quiz/client/src/components/Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n//Custom Hook\nimport { useFetchQuestion } from \"../hooks/FetchQuestion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = () => {\n  _s();\n  const [checked, setChecked] = useState(undefined);\n  const [{\n    isLoading,\n    apiData,\n    serverError\n  }] = useFetchQuestion();\n  const questions = useSelector(state => state.questions.queue[state.questions.trace]);\n  useEffect(() => {\n    // console.log(questions);\n    // console.log(state);\n  });\n  useEffect(() => {\n    // console.log(isLoading);\n    // console.log(\"apidata\",apiData);\n    // console.log(serverError);\n  });\n  const onSelect = i => {\n    //  setChecked(true)\n    console.log(\"radio button choosed\", i);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: \"isLoading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: serverError || \"Unknown Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-light\",\n      children: questions === null || questions === void 0 ? void 0 : questions.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions === null || questions === void 0 ? void 0 : questions.options.map((q, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: false,\n          name: \"options\",\n          id: `q${i}-option`,\n          onChange: () => onSelect(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-primary\",\n          htmlFor: `q${i}-option`,\n          children: q\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, questions === null || questions === void 0 ? void 0 : questions.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"tYZeWpZwy0lb2gPRHuwd6twIyWA=\", false, function () {\n  return [useFetchQuestion, useSelector];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useFetchQuestion","jsxDEV","_jsxDEV","Questions","_s","checked","setChecked","undefined","isLoading","apiData","serverError","questions","state","queue","trace","onSelect","i","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","q","type","value","name","id","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/media/deepak/New Volume/reactproject/quiz/client/src/components/Questions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\n//Custom Hook\nimport { useFetchQuestion } from \"../hooks/FetchQuestion\";\nconst Questions = () => {\n  const [checked, setChecked] = useState(undefined);\n  const [{ isLoading, apiData, serverError }] = useFetchQuestion();\n\n  const questions = useSelector(\n    (state) => state.questions.queue[state.questions.trace]\n  );\n\n  useEffect(() => {\n    // console.log(questions);\n    // console.log(state);\n  });\n\n  useEffect(() => {\n    // console.log(isLoading);\n    // console.log(\"apidata\",apiData);\n    // console.log(serverError);\n  });\n  const onSelect = (i) => {\n    //  setChecked(true)\n    console.log(\"radio button choosed\", i);\n  };\n\n  if (isLoading) return <h3 className=\"text-light\">isLoading</h3>;\n  if (serverError)\n    return <h3 className=\"text-light\">{serverError || \"Unknown Error\"}</h3>;\n  return (\n    <div className=\"questions\">\n      <h2 className=\"text-light\">{questions?.question}</h2>\n\n      <ul key={questions?.id}>\n        {questions?.options.map((q, i) => (\n          <li key={i}>\n            <input\n              type=\"radio\"\n              value={false}\n              name=\"options\"\n              id={`q${i}-option`}\n              onChange={()=>onSelect(i)}\n            />\n            <label className=\"text-primary\" htmlFor={`q${i}-option`}>\n              {q}\n            </label>\n            <div className=\"check\"></div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Questions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}