{"ast":null,"code":"var _jsxFileName = \"/media/deepak/New Volume/reactproject/quiz/client/src/components/Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport data from \"../database/data\";\n\n//Custom Hook\nimport { useFetchQuestion } from \"../hooks/FetchQuestion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = () => {\n  _s();\n  const [checked, setChecked] = useState(undefined);\n  const [{\n    isLoading,\n    apiData,\n    serverError\n  }] = useFetchQuestion();\n  const question = data[0];\n  const {\n    questions\n  } = useSelector(state => state);\n  useEffect(() => {\n    console.log(questions);\n    // console.log(state);\n  });\n\n  useEffect(() => {\n    console.log(isLoading);\n    console.log(apiData);\n    console.log(serverError);\n  });\n  const onSelect = () => {\n    //  setChecked(true)\n    console.log(\"radio button change\");\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: \"isLoading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 22\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: serverError || \"Unknown Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-light\",\n      children: question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: question.options.map((q, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: false,\n          name: \"options\",\n          id: `q${i}-option`,\n          onChange: onSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-primary\",\n          htmlFor: `q${i}-option`,\n          children: q\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this))\n    }, question.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"x423LbazfwjSM5dA5OfUP2TeRo8=\", true, function () {\n  return [useFetchQuestion];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useEffect","useState","data","useFetchQuestion","jsxDEV","_jsxDEV","Questions","_s","checked","setChecked","undefined","isLoading","apiData","serverError","question","questions","useSelector","state","console","log","onSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","map","q","i","type","value","name","id","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/media/deepak/New Volume/reactproject/quiz/client/src/components/Questions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport data from \"../database/data\";\n\n//Custom Hook\nimport { useFetchQuestion } from \"../hooks/FetchQuestion\";\nconst Questions = () => {\n  const [checked, setChecked] = useState(undefined);\n  const [{isLoading, apiData, serverError}] = useFetchQuestion()\n  const question = data[0]\n\n  const {questions} = useSelector(state=>state)\n\n  useEffect(()=>{\n     console.log(questions);\n    // console.log(state);\n  })\n   \n  useEffect(() => {\n    console.log(isLoading);\n    console.log(apiData);\n    console.log(serverError);\n  });\n   const onSelect = () => {\n    //  setChecked(true)\n    console.log(\"radio button change\");\n  }\nif(isLoading) return <h3 className=\"text-light\">isLoading</h3>\nif(serverError) return <h3 className=\"text-light\">{serverError || \"Unknown Error\" }</h3>\n  return (\n    <div className=\"questions\">\n      <h2 className=\"text-light\">{question.question}</h2>\n\n      <ul key={question.id}>\n      { question.options.map((q,i) =>(\n        <li key={i}>\n          <input type=\"radio\" value={false} name=\"options\" id={`q${i}-option`} onChange={onSelect}/>\n          <label className=\"text-primary\" htmlFor={`q${i}-option`}>{q}</label>\n          <div className=\"check\"></div>\n        </li>\n      ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Questions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}