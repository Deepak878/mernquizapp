{"ast":null,"code":"var _s = $RefreshSig$();\n//Fetch question hook to fetch api data and set value to the store\n\nimport { useEffect, useState } from \"react\";\nimport data, { answers } from \"../database/data\";\nimport { useDispatch } from \"react-redux\";\n\n//redux actions\nimport * as Action from \"../redux/questionReducer\";\nimport { getServerData } from \"../helper/helper\";\nexport const useFetchQuestion = () => {\n  _s();\n  const dispatch = useDispatch();\n  // const [getData,setGetData] =  useState({ isLoading: false, apiData:[], serverError:null })\n  const [getData, setGetData] = useState({\n    isLoading: false,\n    apiData: [],\n    serverError: null\n  });\n  useEffect(() => {\n    setGetData(prev => ({\n      ...prev,\n      isLoading: true\n    }));\n\n    /** async function fetch backend data */\n    (async () => {\n      try {\n        const [{\n          questions,\n          answers\n        }] = await getServerData(`${process.env.REACT_APP_SERVER_HOSTNAME}/api/questions`, data => data);\n        //  console.log(queue);\n        if (question.length > 0) {\n          setGetData(prev => ({\n            ...prev,\n            isLoading: false\n          }));\n          setGetData(prev => ({\n            ...prev,\n            apiData: {\n              questions,\n              answers\n            }\n          }));\n\n          /** dispatch an action */\n          dispatch(Action.startExamAction({\n            questions,\n            answers\n          }));\n        } else {\n          throw new Error(\"No Question Avalibale\");\n        }\n      } catch (error) {\n        setGetData(prev => ({\n          ...prev,\n          isLoading: false\n        }));\n        setGetData(prev => ({\n          ...prev,\n          serverError: error\n        }));\n      }\n    })();\n  }, [dispatch]);\n  return [getData, setGetData];\n};\n\n//MOve action dispatch function\n_s(useFetchQuestion, \"yStKDTFtlyvHsQBaBsztnzJfXDQ=\", false, function () {\n  return [useDispatch];\n});\nexport const moveNextQuestion = () => async dispatch => {\n  try {\n    // console.log('okos');\n    dispatch(Action.moveNextAction());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const movePrevQuestion = () => async dispatch => {\n  try {\n    console.log('okos');\n    dispatch(Action.movePrevAction());\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["useEffect","useState","data","answers","useDispatch","Action","getServerData","useFetchQuestion","_s","dispatch","getData","setGetData","isLoading","apiData","serverError","prev","questions","process","env","REACT_APP_SERVER_HOSTNAME","question","length","startExamAction","Error","error","moveNextQuestion","moveNextAction","console","log","movePrevQuestion","movePrevAction"],"sources":["/media/deepak/New Volume/reactproject/quiz/client/src/hooks/FetchQuestion.js"],"sourcesContent":["\n//Fetch question hook to fetch api data and set value to the store\n\nimport { useEffect, useState } from \"react\"\nimport data, {answers} from \"../database/data\"\nimport { useDispatch } from \"react-redux\"\n\n//redux actions\nimport * as Action from \"../redux/questionReducer\"\nimport { getServerData } from \"../helper/helper\"\n\nexport const useFetchQuestion =()=>{\n  const dispatch = useDispatch()\n  // const [getData,setGetData] =  useState({ isLoading: false, apiData:[], serverError:null })\n    const [getData, setGetData] = useState({ isLoading : false, apiData : [], serverError: null});\n\n    useEffect(() => {\n              setGetData(prev => ({...prev, isLoading : true}));\n      \n              /** async function fetch backend data */\n              (async () => {\n                  try {\n                     const [{questions, answers}] =  await getServerData(`${process.env.REACT_APP_SERVER_HOSTNAME}/api/questions`,(data)=>data)\n                    //  console.log(queue);\n                      if(question.length > 0){\n                          setGetData(prev => ({...prev, isLoading : false}));\n                          setGetData(prev => ({...prev, apiData : {questions, answers}}));\n      \n                          /** dispatch an action */\n                          dispatch(Action.startExamAction({questions, answers}))\n                      } else{\n                          throw new Error(\"No Question Avalibale\");\n                      }\n                  } catch (error) {\n                      setGetData(prev => ({...prev, isLoading : false}));\n                      setGetData(prev => ({...prev, serverError : error}));\n                  }\n              })();\n          }, [dispatch]);\n     \n  return [getData, setGetData]\n}\n\n//MOve action dispatch function\nexport const moveNextQuestion = () => async(dispatch) =>{\n    try {\n        // console.log('okos');\n        dispatch(Action.moveNextAction())\n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const movePrevQuestion = () => async(dispatch) =>{\n    try {\n        console.log('okos');\n        dispatch(Action.movePrevAction())\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n"],"mappings":";AACA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,IAAGC,OAAO,QAAO,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;;AAEzC;AACA,OAAO,KAAKC,MAAM,MAAM,0BAA0B;AAClD,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAO,MAAMC,gBAAgB,GAAEA,CAAA,KAAI;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B;EACE,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC;IAAEW,SAAS,EAAG,KAAK;IAAEC,OAAO,EAAG,EAAE;IAAEC,WAAW,EAAE;EAAI,CAAC,CAAC;EAE7Fd,SAAS,CAAC,MAAM;IACNW,UAAU,CAACI,IAAI,KAAK;MAAC,GAAGA,IAAI;MAAEH,SAAS,EAAG;IAAI,CAAC,CAAC,CAAC;;IAEjD;IACA,CAAC,YAAY;MACT,IAAI;QACD,MAAM,CAAC;UAACI,SAAS;UAAEb;QAAO,CAAC,CAAC,GAAI,MAAMG,aAAa,CAAE,GAAEW,OAAO,CAACC,GAAG,CAACC,yBAA0B,gBAAe,EAAEjB,IAAI,IAAGA,IAAI,CAAC;QAC3H;QACE,IAAGkB,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAC;UACnBV,UAAU,CAACI,IAAI,KAAK;YAAC,GAAGA,IAAI;YAAEH,SAAS,EAAG;UAAK,CAAC,CAAC,CAAC;UAClDD,UAAU,CAACI,IAAI,KAAK;YAAC,GAAGA,IAAI;YAAEF,OAAO,EAAG;cAACG,SAAS;cAAEb;YAAO;UAAC,CAAC,CAAC,CAAC;;UAE/D;UACAM,QAAQ,CAACJ,MAAM,CAACiB,eAAe,CAAC;YAACN,SAAS;YAAEb;UAAO,CAAC,CAAC,CAAC;QAC1D,CAAC,MAAK;UACF,MAAM,IAAIoB,KAAK,CAAC,uBAAuB,CAAC;QAC5C;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZb,UAAU,CAACI,IAAI,KAAK;UAAC,GAAGA,IAAI;UAAEH,SAAS,EAAG;QAAK,CAAC,CAAC,CAAC;QAClDD,UAAU,CAACI,IAAI,KAAK;UAAC,GAAGA,IAAI;UAAED,WAAW,EAAGU;QAAK,CAAC,CAAC,CAAC;MACxD;IACJ,CAAC,GAAG;EACR,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEtB,OAAO,CAACC,OAAO,EAAEC,UAAU,CAAC;AAC9B,CAAC;;AAED;AAAAH,EAAA,CAhCaD,gBAAgB;EAAA,QACVH,WAAW;AAAA;AAgC9B,OAAO,MAAMqB,gBAAgB,GAAGA,CAAA,KAAM,MAAMhB,QAAQ,IAAI;EACpD,IAAI;IACA;IACAA,QAAQ,CAACJ,MAAM,CAACqB,cAAc,EAAE,CAAC;EACrC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACZG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMK,gBAAgB,GAAGA,CAAA,KAAM,MAAMpB,QAAQ,IAAI;EACpD,IAAI;IACAkB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBnB,QAAQ,CAACJ,MAAM,CAACyB,cAAc,EAAE,CAAC;EACrC,CAAC,CAAC,OAAON,KAAK,EAAE;IACZG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}